{"rules":
  {
    ".read": "auth.uid === 'secret-service-worker'",
    ".write":"auth.uid === 'secret-service-worker'",
    "users": {
      ".read": false,
      "$uid": {
        ".read": "auth != null",
        ".write":"auth != null && auth.uid === $uid",
        "balance": {
          ".validate": "auth.uid === 'secret-service-worker' || (!data.exists() && newData.val() === 100) || data.val() === newData.val() || (data.exists() && newData.exists() && newData.isNumber() && newData.val() >= 0)"
        },
        "wagers": {
          "$wager_id": {
            ".validate": "auth.uid === 'secret-service-worker' || root.child('events/'+root.child('bets/'+$wager_id+'/event_id').val()+'/air_at').val() >= now",
            "wager": {
              ".validate": "auth.uid === 'secret-service-worker' || (newData.val() >= 0 && (
              (data.exists() && data.parent().parent().parent().child('balance').val() + data.val() - newData.val() === newData.parent().parent().parent().child('balance').val())
              ||
              (!data.exists() && data.parent().parent().parent().child('balance').val() - newData.val() === newData.parent().parent().parent().child('balance').val())
              ))"
            }
          }
        }
      }
    },
    "secure": {
      "$uid": {
        ".read": "auth != null && auth.uid === $uid",
        ".write": "auth != null && auth.uid === $uid"
      }
    },
    "events": {
      ".read": true
    },
    "bets": {
      ".read": true
    }
  }
}